CREATE OR REPLACE PROCEDURE EXAMEN_03(NUM1 NUMBER,NUM2 NUMBER)
-- VERSION EXAMEN ENRIQUE
AS
BEGIN
  FOR I IN NUM1..NUM2 LOOP
    IF MOD(I,10)=0 THEN
      VER(I);
    END IF;
  END LOOP;
  
  FOR I IN NUM2..NUM1 LOOP
    IF MOD(I,10)=0 THEN
      VER(I);
    END IF;
  END LOOP;
END;

CREATE OR REPLACE PROCEDURE EXAMEN_03_v2(PNUM1 NUMBER,PNUM2 NUMBER)
-- VERSIÓN EXAMEN YOLANDA
AS
MENOR NUMBER;
MAYOR NUMBER;
BEGIN
IF PNUM1 < PNUM2 THEN 
   MENOR := PNUM1;
   MAYOR := PNUM2;
ELSE
   MAYOR := PNUM1;
   MENOR := PNUM2;
END IF;
  FOR I IN MENOR..MAYOR LOOP
    IF MOD(I,10)=0 THEN
      VER(I);
    END IF;
  END LOOP;
END;

execute EXAMEN_03_v2 ( 102,102);

-- VERSIÓN CON FUNCIONES

CREATE OR REPLACE FUNCTION CADENA(NUM1 NUMBER,NUM2 NUMBER)
RETURN VARCHAR2
IS
  CAD VARCHAR2(32767);
BEGIN
FOR I IN NUM1..NUM2 LOOP
    IF MOD(I,10)=0 THEN
      CAD:=CAD||' '||I;
    END IF;
  END LOOP;
  RETURN CAD;
END;

CREATE OR REPLACE PROCEDURE EXAMEN_03_v3(PNUM1 NUMBER,PNUM2 NUMBER)
AS
MENOR NUMBER;
MAYOR NUMBER;
BEGIN
IF PNUM1 < PNUM2 THEN 
   MENOR := PNUM1;
   MAYOR := PNUM2;
ELSE
   MAYOR := PNUM1;
   MENOR := PNUM2;
END IF;
VER (CADENA (MENOR,MAYOR));   
END;


execute EXAMEN_03_v3 ( 10,102); 




CREATE OR REPLACE PROCEDURE EXAMEN_01(PNOM VARCHAR2,PTEL VARCHAR2,PFHN DATE)
-- VERSIÓN EXAMEN
AS
  NUM_SORTEO NUMBER;
BEGIN

  
  IF PNOM IS NULL OR PTEL IS NULL OR PFHN IS NULL THEN
    VER('ERROR, PUEDE HABER NULOS');
  ELSIF LENGTH(PNOM)<3 THEN
    VER('ERROR. EL NOMBRE HA DE TENER AL MENOS 3 CARACTERES');
  ELSIF  LENGTH(PTEL)<>9 THEN
     VER('ERROR, EL TELÉFONO HA DE TENER 9 DÍGITOS');  
  ELSIF TRUNC((SYSDATE-PFHN)/365.25)<18 THEN 
     VER('ERROR');
  ELSE 
    NUM_SORTEO:=TO_CHAR(SYSDATE,'DD')+TO_CHAR(SYSDATE,'MM')+TO_CHAR(SYSDATE,'HH24')
  +TO_CHAR(SYSDATE,'MI')+TO_CHAR(SYSDATE,'SS');
      VER('TIENES UN NUMERO PARA PARTICIPAR EN NUESTRO SORTEO: '
      ||TO_CHAR(SYSDATE,'DD')||' + '||TO_CHAR(SYSDATE,'MM')||' + '
      ||TO_CHAR(SYSDATE,'HH24')||' + '||TO_CHAR(SYSDATE,'MI')||' + '
      ||TO_CHAR(SYSDATE,'SS')||' = '||NUM_SORTEO);
  END IF;
END;

EXECUTE EXAMEN_01 ('PEPE','601114198','28/02/2001');

CREATE OR REPLACE FUNCTION VALIDA_DIGITOS (PCADENA VARCHAR2)
RETURN BOOLEAN
IS
BEGIN 
  FOR I IN 1..LENGTH(PCADENA) LOOP
    IF SUBSTR(PCADENA,I,1) NOT BETWEEN '0' AND '9' THEN 
       RETURN FALSE;
    END IF;
  END LOOP;
  RETURN TRUE;
END;


CREATE OR REPLACE PROCEDURE EXAMEN_01_V2(PNOM VARCHAR2,PTEL VARCHAR2,PFHN DATE)
-- TAMBIEN EXAMEN PERO CON FUNCIÓN VALIDAR DIGITOS TELEFONO
AS
  NUM_SORTEO NUMBER;
BEGIN
  IF PNOM IS NULL OR PTEL IS NULL OR PFHN IS NULL THEN
    VER('ERROR, PUEDE HABER NULOS');
  ELSE 
     IF LENGTH(PNOM)<3 THEN
        VER('ERROR. EL NOMBRE HA DE TENER AL MENOS 3 CARACTERES');
     ELSE
       IF LENGTH(PTEL)<>9 OR VALIDA_DIGITOS(PTEL) = FALSE  THEN
          VER('ERROR, EL TELÉFONO HA DE TENER 9 DÍGITOS');  
       ELSE 
         IF TRUNC((SYSDATE-PFHN)/365.25)<18 THEN 
           VER('ERROR EN LA EDAD');
         ELSE 
           NUM_SORTEO:=TO_CHAR(SYSDATE,'DD')+TO_CHAR(SYSDATE,'MM')+TO_CHAR(SYSDATE,'HH24')
             +TO_CHAR(SYSDATE,'MI')+TO_CHAR(SYSDATE,'SS');
           VER('TIENES UN NUMERO PARA PARTICIPAR EN NUESTRO SORTEO: '||NUM_SORTEO);
         END IF;  
       END IF; 
     END IF; 
  END IF;
END;

EXECUTE EXAMEN_01_V2 ('PEPE','6018419P8','28/02/2001');

CREATE OR REPLACE FUNCTION CALCULA_NUMERO
RETURN NUMBER
AS
  CALCULA_NUMERO NUMBER;
BEGIN
  CALCULA_NUMERO := (TO_CHAR(SYSDATE,'DD')) + (TO_CHAR(SYSDATE,'MM')) + (TO_CHAR(SYSDATE,'HH24')) + (TO_CHAR(SYSDATE,'MI')) + (TO_CHAR(SYSDATE,'SS'));
  RETURN CALCULA_NUMERO;
END;

CREATE OR REPLACE FUNCTION CALCULA_EDAD (FECHA_USUARIO DATE)
RETURN NUMBER
AS
  EDAD NUMBER;
BEGIN
  EDAD := TRUNC((SYSDATE - FECHA_USUARIO)/365.25);
  RETURN EDAD;
END;

  
CREATE OR REPLACE PROCEDURE EXAMEN_01_V3 (NOMBRE VARCHAR2, TELEFONO VARCHAR2, FECHA_NAC DATE)
AS
  CALCULA_PAPELETA NUMBER;
  VEDAD NUMBER;
  VACIOS EXCEPTION;
  NOMBREPEQUEÑO EXCEPTION;
  TELEFONOPEQUEÑO EXCEPTION;
  MENORDEEDAD EXCEPTION;
BEGIN
  IF NOMBRE IS NULL  OR TELEFONO IS NULL OR FECHA_NAC IS NULL THEN
     RAISE VACIOS;
  END IF;
  IF LENGTH(NOMBRE) < 3 THEN
    RAISE NOMBREPEQUEÑO;
  END IF;
  IF LENGTH(TELEFONO)<>9 THEN
    RAISE TELEFONOPEQUEÑO;
  END IF;
  VEDAD := CALCULA_EDAD(FECHA_NAC);
  IF VEDAD < 18 THEN
    RAISE MENORDEEDAD;
  END IF;
  CALCULA_PAPELETA := CALCULA_NUMERO;
  VER ('ENHORABUENA, TU NUMERO DE PAPELETA ES EL '||CALCULA_PAPELETA);
  EXCEPTION
    WHEN VACIOS THEN
      VER ('TIENES QUE INTRODUCIR OBLIGATORIAMENTE TODOS LOS CAMPOS');
    WHEN NOMBREPEQUEÑO THEN
      VER ('EL NOMBRE TIENE QUE TENER COMO MÍNIMO 3 CARACTERES');
    WHEN TELEFONOPEQUEÑO THEN
      VER ('EL TELEFONO DEBE TENER COMO MÍNIMO 9 DIGITOS');
    WHEN MENORDEEDAD THEN
      VER ('PARA PODER PARTICIPAR, EL USUARIO DEBE SER MAYOR DE EDAD');
END;
EXECUTE EXAMEN_01 ('ALEJANDRO','678854858','11/05/2003');





CREATE OR REPLACE PROCEDURE EXAMEN_02 (NUM1 NUMBER,
                                       NUM2 NUMBER,
                                       NUM3 NUMBER,
                                       NUM4 NUMBER)
  AS
    POST NUMBER;
    MULT NUMBER;
  BEGIN
    POST := 0;
    MULT := 0;
    IF (NUM1 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM1,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    IF (NUM2 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM2,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    IF (NUM3 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM3,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    IF (NUM4 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM4,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    DBMS_OUTPUT.put_line('HAY '||POST||' NUMEROS POSITIVOS');
    DBMS_OUTPUT.put_line('HAY '||MULT||' MULTIPLOS DE 5');
    IF (NUM1 = 0 OR NUM2 = 0 OR NUM3 = 0 OR NUM4 = 0) THEN 
      DBMS_OUTPUT.put_line('NO ME GUSTAN LOS CEROS');
    END IF;
    
  END;
EXECUTE EXAMEN_02(3,15,0,0);

CREATE OR REPLACE FUNCTION  COMPRUEBA_CEROS (N1 NUMBER, N2 NUMBER, N3 NUMBER, N4 NUMBER)
RETURN BOOLEAN
IS
BEGIN
 IF (N1 = 0 OR N2 = 0 OR N3 = 0 OR N4 = 0) THEN
    RETURN TRUE;
 ELSE 
    RETURN FALSE;
 END IF;   
END; 



CREATE OR REPLACE PROCEDURE EXAMEN_02_V2 (NUM1 NUMBER,
                                       NUM2 NUMBER,
                                       NUM3 NUMBER,
                                       NUM4 NUMBER)
  AS
    POST NUMBER;
    MULT NUMBER;
  BEGIN
    POST := 0;
    MULT := 0;
    IF (NUM1 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM1,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    IF (NUM2 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM2,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    IF (NUM3 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM3,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    IF (NUM4 > 0) THEN
      POST := POST + 1;
      IF (MOD (NUM4,5) = 0 ) THEN 
        MULT := MULT + 1;
      END IF;
    END IF;
    DBMS_OUTPUT.put_line('HAY '||POST||' NUMEROS POSITIVOS');
    DBMS_OUTPUT.put_line('HAY '||MULT||' MULTIPLOS DE 5');
    IF COMPRUEBA_CEROS (NUM1, NUM2, NUM3, NUM4) = TRUE THEN
       DBMS_OUTPUT.put_line('NO ME GUSTAN LOS CEROS');
    END IF;
    
  END;
  
  
  CREATE OR REPLACE PROCEDURE EXAMEN_04(NUM1 NUMBER,
                                      NUM2 NUMBER,
                                      NUM3 NUMBER)
AS
  SUMA NUMBER;
  CONTADOR NUMBER;
BEGIN
  IF ((NUM1 + NUM2) < NUM3) THEN
    SUMA := NUM1 + NUM2;
    DBMS_OUTPUT.put_line(SUMA);
    CONTADOR := 1;
    WHILE (SUMA < NUM3) LOOP
      SUMA := SUMA + NUM1 + NUM2;
      CONTADOR := CONTADOR + 1;
      DBMS_OUTPUT.put_line(SUMA);
    END LOOP;
    DBMS_OUTPUT.put_line('LLEVO '||CONTADOR||' VECES SUMANDO');
  ELSE
   DBMS_OUTPUT.put_line('ERROR');
   END IF;
END;

EXECUTE EXAMEN_04(3,5,26);
 
CREATE OR REPLACE PROCEDURE EXAMEN_04_V2(NUM1 NUMBER,
                                      NUM2 NUMBER,
                                      NUM3 NUMBER)
AS
  SUMA NUMBER;
  CONTADOR NUMBER;
  ERROR EXCEPTION;
BEGIN
  IF ((NUM1 + NUM2) >= NUM3) THEN
     RAISE ERROR;
  END IF;   
  SUMA := NUM1 + NUM2;
  DBMS_OUTPUT.put_line(SUMA);
  CONTADOR := 1;
    WHILE (SUMA < NUM3) LOOP
      SUMA := SUMA + NUM1 + NUM2;
      CONTADOR := CONTADOR + 1;
      DBMS_OUTPUT.put_line(SUMA);
    END LOOP;
    DBMS_OUTPUT.put_line('LLEVO '||CONTADOR||' VECES SUMANDO');

EXCEPTION
 WHEN ERROR THEN
   DBMS_OUTPUT.put_line('ERROR');

END; 